apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: get-photo-from-s3
  name: get-photo-from-s3
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
        app: get-photo-from-s3
  template:
    metadata:
      labels:
        app: get-photo-from-s3
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: s3-key
            - configMapRef:
                name: s3-endpoint
          image: supakornbabe/spai-get-photo-from-s3:dev-6e84891
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: get-photo-from-s3
          ports:
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 2000Mi
            requests:
              cpu: 100m
              memory: 1000Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: "v1"
kind: "Service"
metadata:
    name: "get-photo-from-s3-service"
    labels:
    app: "get-photo-from-s3"
spec:
    ports:
    - protocol: "TCP"
    port: 80
    selector:
    app: "get-photo-from-s3"
    type: "LoadBalancer"